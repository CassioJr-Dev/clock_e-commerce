generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  userId     String   @id @unique @db.Text
  name       String   @db.VarChar(255)
  email      String   @unique @db.VarChar(255)
  password   String   @db.VarChar(100)
  telephone  String   @unique @db.VarChar(100)
  created_at DateTime
  Cart       Cart?

  @@map("user")
}

model Admin {
  adminId    String   @id @unique @db.Text
  name       String   @db.VarChar(255)
  email      String   @unique @db.VarChar(255)
  password   String   @db.VarChar(100)
  created_at DateTime

  product Product[]

  @@map("admin")
}

model Product {
  productId   String     @id @unique @db.Text
  name        String     @db.Text
  description String?    @db.Text
  price       Decimal    @db.Decimal(10, 2)
  oldPrice    Decimal?   @db.Decimal(10, 2)
  stock       Int
  image       String     @db.Text
  category    String     @db.VarChar(100)
  admin       Admin      @relation(fields: [adminId], references: [adminId], onDelete: Cascade)
  adminId     String
  created_at  DateTime
  CartItem    CartItem[]

  @@map("product")
}

model Cart {
  cartId     String     @id @unique @db.Text
  user       User       @relation(fields: [userId], references: [userId], onDelete: Cascade)
  userId     String     @unique
  created_at DateTime
  CartItem   CartItem[]

  @@map("cart")
}

model CartItem {
  itemId     String   @id @unique @db.Text
  cart       Cart     @relation(fields: [cartId], references: [cartId], onDelete: Cascade)
  cartId     String
  product    Product  @relation(fields: [productId], references: [productId], onDelete: Cascade)
  productId  String
  quantity   Int
  created_at DateTime

  @@map("cartItem")
}
